AWSTemplateFormatVersion: '2010-09-09'
Description: Static Web Assets (S3 bucket, Route53 and CloudFront Distribution)
Parameters:
  Environment:
    Description: Required
    MinLength: '1'
    Type: String
  CloudFrontProtocols:
    Type: String
    Description: Required. CloudFront Supported Web Protocols.
    MinLength: '1'
    Default: redirect-to-https
    AllowedValues:
      - allow-all
      - https-only
      - redirect-to-https
  CloudFrontCertificateArn:
    Type: String
  DNS:
    Description: Required
    MinLength: '1'
    Type: String
Conditions:
  IsProduction: !Equals [!Ref Environment, "production"]
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DNS
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
          Principal:
            CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !If [IsProduction, !Sub "${DNS}", !Sub "${Environment}.${DNS}"]
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Web assets
        Enabled: true
        HttpVersion: 'http2'
        PriceClass: 'PriceClass_100'
        DefaultRootObject: 'index.html'
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
          TargetOriginId: assets-origin
          ViewerProtocolPolicy: !Ref CloudFrontProtocols
        CustomErrorResponses:
        - ErrorCachingMinTTL: 300
          ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: '/'
        - ErrorCachingMinTTL: 300
          ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: '/'
        Origins:
        - DomainName: !GetAtt S3Bucket.DomainName
          Id: assets-origin
          S3OriginConfig:
            OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        Aliases:
        - !If [IsProduction, !Sub "${DNS}", !Sub "${Environment}.${DNS}"]
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFrontCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018

Outputs:
  S3AssetBucketName:
    Description: 'Amazon S3 bucket for storing assets.'
    Value: !Ref 'S3Bucket'
  CloudFrontDistributionDomain:
    Description: 'Domain for the Web Assets CloudFront Distribution'
    Value: !GetAtt CloudFrontDistribution.DomainName
  CloudFrontDistributionUrl:
    Description: 'URL for accessing assets via CloudFront Distribution URL'
    Value: !Sub https://${CloudFrontDistribution.DomainName}
  CloudFrontDistributionId:
    Description: 'Assets CloudFront distribution ID'
    Value: !Ref CloudFrontDistribution
